{"version":3,"sources":["components/redux/actions.js","components/filter/Filter.js","components/contacts/ContactsForm.js","components/contacts/ContactsItems.js","components/phonebook/PhoneBook.js","components/App.js","components/redux/redusers.js","components/redux/store.js","index.js"],"names":["addContact","createAction","deleteContact","changeFilter","mapDispatchToProps","actions","connect","state","contacts","filter","style","display","marginTop","marginBottom","width","type","name","value","onChange","e","target","placeholder","ContactsForm","number","handleChange","event","setState","handleSubmit","preventDefault","props","id","uuidv4","onSubmit","this","border","height","backgroundColor","color","Component","contactsItems","dispatch","TransitionGroup","component","className","item","toLowerCase","includes","filtredArr","map","el","CSSTransition","key","timeout","classNames","onClick","PhoneBook","isExsist","in","appear","unmountOnExit","length","App","createReducer","payload","_","combineReducers","midlleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","storage","rootReducer","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.4584f5b1.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\n// const addContact = contact => ({\n//   type: types.ADD,\n//   payload: contact,\n// });\nconst addContact = createAction('phonebook/add');\n\n// const deleteContact = id => ({\n//   type: types.DELETE,\n//   payload: id,\n// });\nconst deleteContact = createAction('phonebook/delete');\n\n// const changeFilter = value => ({\n//   type: types.FILTER,\n//   payload: value,\n// });\nconst changeFilter = createAction('phonebook/filter');\n\nexport default { addContact, deleteContact, changeFilter };\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport actions from '../redux/actions';\n\nfunction Filter({ filter, changeFilter }) {\n  return (\n    <>\n      <input\n        style={{\n          display: 'block',\n          marginTop: '5px',\n          marginBottom: '10px',\n          width: '100%',\n        }}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={e => changeFilter(e.target.value)}\n        placeholder=\"find contact\"\n      ></input>\n    </>\n  );\n}\nconst mapStateToProps = state => {\n  return { contacts: state.contacts.contacts };\n};\n\nconst mapDispatchToProps = {\n  changeFilter: actions.changeFilter,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport addContact from '../redux/actions';\nimport { connect } from 'react-redux';\n\nclass ContactsForm extends Component {\n  state = {\n    contacts: [],\n    name: '',\n    number: '',\n  };\n  handleChange = event => {\n    const name = event.target.name;\n    this.setState({ [name]: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.addContact({\n      name: this.state.name,\n      id: uuidv4(),\n      number: this.state.number,\n    });\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n  render() {\n    return (\n      <form\n        onSubmit={this.handleSubmit}\n        style={{\n          border: '1px solid whisper',\n          width: '400px',\n          height: '165px',\n        }}\n      >\n        <label>Name</label>\n        <input\n          name=\"name\"\n          style={{\n            display: 'block',\n            marginTop: '5px',\n            marginBottom: '10px',\n            width: '100%',\n          }}\n          placeholder=\"add name\"\n          value={this.state.name}\n          onChange={this.handleChange}\n        ></input>\n        <label>Number</label>\n        <input\n          name=\"number\"\n          style={{\n            display: 'block',\n            marginTop: '5px',\n            marginBottom: '10px',\n            width: '100%',\n          }}\n          placeholder=\"add number\"\n          value={this.state.number}\n          onChange={this.handleChange}\n        ></input>\n        <button\n          style={{\n            marginTop: '15px',\n            width: '100%',\n            backgroundColor: 'blue',\n            color: 'white',\n            height: '35px',\n          }}\n        >\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default connect(null, addContact)(ContactsForm);\n","import React from 'react';\nimport './ContactsItems.css';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport actions from '../redux/actions';\n\nconst filtredArr = (contactsItems, filter) => {\n  return filter\n    ? contactsItems.filter(item =>\n        item.name.toLowerCase().includes(filter.toLowerCase()),\n      )\n    : contactsItems;\n};\nfunction ContactsItems({ contactsItems, deleteContact, filter }) {\n  return (\n    <TransitionGroup component=\"ul\" className=\"list\">\n      {filtredArr(contactsItems, filter).map(el => (\n        <CSSTransition key={el.id} timeout={300} classNames=\"list-fade\">\n          <li key={el.id} className=\"item\">\n            <p>{el.name}</p>\n            <p>{el.number}</p>\n            <button className=\"btn\" onClick={() => deleteContact(el.id)}>\n              X\n            </button>\n          </li>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n}\nconst mapStateToProps = state => ({\n  contactsItems: state.contacts.contacts,\n  filter: state.contacts.filter,\n});\nconst mapDispatchToProps = dispatch => ({\n  deleteContact: id => dispatch(actions.deleteContact(id)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsItems);\n","import React, { Component } from 'react';\nimport Filter from '../filter/Filter';\nimport ContactsForm from '../contacts/ContactsForm';\nimport ContactsItems from '../contacts/ContactsItems';\nimport './PhoneBook.css';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\n\nclass PhoneBook extends Component {\n  state = {\n    isExsist: false,\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <CSSTransition\n          in={true}\n          appear={true}\n          classNames=\"Phone-slideIn\"\n          timeout={1000}\n          unmountOnExit\n        >\n          <h1 className=\"Phone\">PhoneBook</h1>\n        </CSSTransition>\n        <CSSTransition\n          in={this.state.isExsist}\n          classNames=\"alert\"\n          timeout={500}\n          unmountOnExit\n        >\n          <h2 className=\"alert\">This name is already in contacts!</h2>\n        </CSSTransition>\n        <ContactsForm />\n        <CSSTransition\n          in={this.props.contactsItems.length > 1 || this.props.filter !== ''}\n          timeout={500}\n          unmountOnExit\n        >\n          <Filter />\n        </CSSTransition>\n        <ContactsItems />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  contactsItems: state.contacts.contacts,\n  filter: state.contacts.filter,\n});\n\nexport default connect(mapStateToProps)(PhoneBook);\n","import React from 'react';\nimport PhoneBook from './phonebook/PhoneBook';\n\nfunction App() {\n  return (\n    <>\n      <PhoneBook />\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './actions';\n\nconst contacts = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contacts from './redusers';\n\nconst midlleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nconst rootReducer = combineReducers({\n  contacts: contacts,\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  midlleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'modern-normalize/modern-normalize.css';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './components/redux/store';\n\nReactDOM.render(\n  <Provider store={store.store}>\n    <PersistGate loading={null} persistor={store.persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}